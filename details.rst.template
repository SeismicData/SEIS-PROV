Detailed Definition
===================

This section details what ``SEIS-PROV`` is, what records are part of it, and
how these records are defined.

.. contents::
    :local:
    :depth: 1

What PROV Records are Considered Part of SEIS-PROV?
---------------------------------------------------

``SEIS-PROV`` is a domain-specific extension of W3C PROV and thus all the
capabilities of W3C PROV can be used. Furthermore a ``SEIS-PROV`` document must
also be a valid W3C PROV document.

It can be understood as an additional set of constraints on top of W3C PROV.
These constraints are currently enforced per record and there are four
possibilities for a record to be considered part of ``SEIS-PROV``:


1. An agent with a **prov:type** equal to **prov:SoftwareAgent** and an id
   under the ``SEIS-PROV`` namespace.
2. An agent with a **prov:type** equal to **prov:Person** and an id under the
   ``SEIS-PROV`` namespace.
3. An entity with a **prov:type** and id under the ``SEIS-PROV`` namespace.
4. An activity with a **prov:type** and id under the ``SEIS-PROV`` namespace.

All other records must just be valid according to the W3C PROV specification.
It is forbidden to use an identifier under the ``SEIS-PROV`` namespace for any
other record.

As soon as a record is considered part of ``SEIS-PROV`` it must fulfill the
additional constraints detailed in the following.


SEIS-PROV IDs
-------------

All ``prov:id``'s living in the ``SEIS-PROV`` namespace must follow a certain
pattern - they have to validate against this regular expression:

``^sp\d{{3,5}}_[a-z]{{2}}_[a-z0-9]{{7,12}}$``

Examples are:

   * ``sp001_wf_f84fb9a``
   * ``sp027_bs_ea78b46``

An id thus consists of three parts delimited by underscores with the
goal of attaining a fairly short but still slightly descriptive
identifier:

1. A 3 to 5 digit zero padded number prefixed with ``sp``. This is intended
   to further illustrate the sequence of processing steps and events.
   ``001`` for example is the first step in a processing chain, whereas
   ``017`` is the seventeenth step. This is not enforced anywhere but nice
   to have so users are encouraged to adopt this. The ``sp`` prefix is
   needed to provide a valid qualified name attribute according the XML
   specification and stands for ``SEIS-PROV``.
2. A two letter code depending on the type of entity or activity. This
   is enforced and part of the ``SEIS-PROV`` definition. Please see the
   definition of each node for the corresponding two letter code.
3. A 7 to 12 letter lowercase alphanumeric hash to ensure uniqueness of
   ids.

-----

Agents
------

One is free to use any agent as long as they are valid according to the W3C
PROV specification. If an agent is under the ``SEIS-PROV`` namespace, a couple
of additional constraints apply. These are intended to enforce a certain
minimum amount of information.


.. contents::
    :local:
    :depth: 1


{agents}

-----

Entities
--------

``SEIS-PROV`` determines the type of an entity via the ``prov:type`` attribute.
The following entities are currently available. Further types will be added as
requested by the community.

.. contents::
    :local:
    :depth: 1


{entities}

-----

Activities
----------

``SEIS-PROV`` determines the type of an activity via the ``prov:type``
attribute.  The following activities are currently available. Further types
will be added as requested by the community.

.. contents::
    :local:
    :depth: 1

{activities}
